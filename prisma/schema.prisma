generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  hashed_password String
  name String
  phone String?
  role Role @default(CUSTOMER)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  orders Order[]
  sessions Session[]
}

model Session {
  id String @id
  userId Int
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

enum Role {
  CUSTOMER
  STAFF
  ADMIN
}

model Order {
  id Int @id @default(autoincrement())
  user_id Int
  user User @relation(fields: [user_id], references: [id])
  queue_number Int @unique
  status OrderStatus @default(PENDING)
  total_price Decimal @db.Decimal(10, 2)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  items OrderItem[]
  payment Payment?
}

enum OrderStatus {
  PENDING      // รอดำเนินการ
  IN_PROGRESS  // กำลังซัก
  WASHED       // ซักเสร็จ
  READY        // พร้อมรับ
  COMPLETED    // เสร็จสมบูรณ์
  CANCELLED    // ยกเลิก
}

model OrderItem {
  id Int @id @default(autoincrement())
  order_id Int
  order Order @relation(fields: [order_id], references: [id])
  description String
  quantity Int
  price Decimal @db.Decimal(10, 2)
}

model Payment {
  id Int @id @default(autoincrement())
  order_id Int @unique
  order Order @relation(fields: [order_id], references: [id])
  amount Decimal @db.Decimal(10, 2)
  method PaymentMethod
  status PaymentStatus
  paid_at DateTime @default(now())
}

enum PaymentMethod {
  CASH
  CREDIT_CARD
  MOBILE_PAYMENT
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}

model QueueSettings {
  id Int @id @default(autoincrement())
  max_queue_per_day Int
  current_queue Int @default(0)
  date DateTime @unique
}
